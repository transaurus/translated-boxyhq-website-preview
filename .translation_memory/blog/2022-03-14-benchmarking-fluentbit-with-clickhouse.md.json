{
  "source_file_path_relative_to_docusaurus_root": "blog/2022-03-14-benchmarking-fluentbit-with-clickhouse.md",
  "source_file_content_hash": "a520db5482c348eddaa5f16084d48b1bae2096ea566df8053d579d038ddb7ebb",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: benchmarking-fluentbit-with-clickhouse\ntitle: Benchmarking fluent-bit with Clickhouse\nauthor: Utkarsh Mehta\nauthor_title: Senior Software Engineer (Open Source Dev Tools) @BoxyHQ\nauthor_url: https://www.linkedin.com/in/utkarsh-mehta2612/\nauthor_image_url: /images/authors/utkarsh.jpg\ntags_disabled:\n  [\n    enterprise-readiness,\n    engineering,\n    audit-logs,\n    hermes,\n    fluent-bit,\n    clickhouse,\n    benchmarking,\n    research,\n    load-testing,\n  ]\nimage: /img/blog/fluentbit-clickhouse.png\n---",
      "source_content_hash": "c85cbfca94326c1f9143ea44489eb5672636ccb127e3598edab76f749f353651",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "2fdadb08",
      "source_content": "One of our products, [Hermes](https://github.com/boxyhq/hermes) is an audit logs service. Currently, Hermes is in the prototype phase and uses a [Go](https://go.dev/) REST API server to ingest audit logs and send them to [Loki](https://grafana.com/oss/loki/).",
      "source_content_hash": "ce317fabcd6d70ebb6393cc47c18e794b8106835361aa47eb7392cf580ce17d8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "我们的产品之一[Hermes](https://github.com/boxyhq/hermes)是一款审计日志服务。目前Hermes处于原型阶段，使用[Go](https://go.dev/)语言开发的REST API服务器来接收审计日志并发送至[Loki](https://grafana.com/oss/loki/)。"
      }
    },
    {
      "segment_id": "f2c2bdd0",
      "source_content": "We were trying out different databases, ingesters & tools to see which are best suited for Hermes and should be able to scale with high traffic without losing a single audit log & which can search through high amount data efficiently.",
      "source_content_hash": "9350212ca70814bff3f67fcf99d53b81f1162c030ad4756c3043610cca8c6689",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "我们测试了多种数据库、日志采集器和工具，以确定哪些方案最适合Hermes——既能承受高流量而不丢失任何审计日志，又能高效检索海量数据。"
      }
    },
    {
      "segment_id": "a76548f8",
      "source_content": "![Title Image](/img/blog/fluentbit-clickhouse.png)",
      "source_content_hash": "1b04f9e3e790e14c625006146c593fd53268162eb6b79a14283110b0e33b1ab2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "![标题图片](/img/blog/fluentbit-clickhouse.png)"
      }
    },
    {
      "segment_id": "4b1d2d7d",
      "source_content": "We decided to benchmark different combinations of ingesters (Vector, Fluentd, Fluent-Bit, etc.) and storage & query tools (Mongodb, Clickhouse, Elasticsearch, etc.).",
      "source_content_hash": "58cca5cb5d65f49bca628350ee1df8a2a9b634ef310c4e960ae001a063225815",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "我们决定对不同的日志采集器（Vector、Fluentd、Fluent-Bit等）与存储查询工具（Mongodb、Clickhouse、Elasticsearch等）组合进行基准测试。"
      }
    },
    {
      "segment_id": "dfe931a2",
      "source_content": "The first round of benchmarks will be lightweight and extensive benchmarks will follow later once we pick the right tools for Hermes.",
      "source_content_hash": "53d27f1feda01198e5a93b0d8c2875b4aedecc9fb0faccad3ddea09df31a2b8b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "首轮基准测试为轻量级测试，待为Hermes选定合适工具后，后续将进行更全面的基准测试。"
      }
    },
    {
      "segment_id": "0037ff70",
      "source_content": "## Hardware Configuration",
      "source_content_hash": "9006e94cd48eb0880f5f51aa806adfd4f7e701830c7b677c56afef3e1891e177",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 硬件配置"
      }
    },
    {
      "segment_id": "bdc231b1",
      "source_content": "The following tests and benchmarks have been performed on a MacBook Pro (14-inch, 2021) with Apple M1 Pro and 16 GB RAM, the tools to be tested were dockerized with docker desktop running with 4 GB Memory, 4 CPUs & 1 GB Swap.",
      "source_content_hash": "4ba479040e644ee573d46ca3ae84b2ef09606ff8155a7c0d8452be9844608253",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "所有测试均在MacBook Pro（14英寸，2021款）上完成，该设备配备Apple M1 Pro芯片和16GB内存。被测工具通过Docker Desktop容器化运行，分配资源为4GB内存、4核CPU及1GB交换空间。"
      }
    },
    {
      "segment_id": "96407786",
      "source_content": "> Fluent Bit is a super-fast, lightweight, highly scalable logging and metrics processor and forwarder.\n> It is the preferred choice for cloud and containerized environments.\n> Source: [fluent-bit website](https://fluentbit.io/)\n> Clickhouse is the fastest OLAP database on earth. ClickHouse works 100–1000x faster than traditional approaches.\n> Companies like Uber, Cloudflare, Spotify, and eBay use Clickhouse.\n> Source: [Clickhouse website](https://clickhouse.com/)",
      "source_content_hash": "b0292d8fc01fadb97f153cb88bf1d1b003b017a6a3b853179bf771e97f74e913",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-CN": "> Fluent Bit是一款超高速、轻量级且高度可扩展的日志与指标处理转发器。\n> 它是云和容器化环境的首选方案。\n> 来源：[fluent-bit官网](https://fluentbit.io/)\n> Clickhouse是地球上最快的OLAP数据库，其性能比传统方案快100–1000倍。\n> Uber、Cloudflare、Spotify和eBay等公司均采用Clickhouse。\n> 来源：[Clickhouse官网](https://clickhouse.com/)"
      }
    },
    {
      "segment_id": "95e9ba12",
      "source_content": "So few pointers before we go ahead,",
      "source_content_hash": "00751abf7338d0da735414f5ef68a7912cdea505a4305a81d3c4521a004a4790",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "测试前的关键要点："
      }
    },
    {
      "segment_id": "824626b3",
      "source_content": "1. Fluent-bit is fast at ingesting logs/data, processing them, and sending them to a destination.\n\n2. Clickhouse is efficient at handling and querying data.\n\n3. Fluent-bit does not support Clickhouse by default.\n\n4. The fluent-bit ecosystem lets users write their plugins in Golang and add additional support required.\n\n5. For faster querying in Clickhouse, an efficient table schema with indexes, compression, etc. should be established.",
      "source_content_hash": "05ef00ca5ad98f1d07f9d899b7182ae6a51a14d0028cb760baa369329b1be830",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "1. Fluent-bit擅长高速采集、处理日志/数据并发送至目标存储\n\n2. Clickhouse在数据处理和查询方面表现卓越\n\n3. Fluent-bit默认不支持Clickhouse\n\n4. Fluent-bit生态系统允许用户用Golang编写插件以扩展功能支持\n\n5. 为提升Clickhouse查询性能，需设计包含索引、压缩等机制的高效表结构"
      }
    },
    {
      "segment_id": "2c1b51df",
      "source_content": "## Clickhouse plugin for fluent-bit",
      "source_content_hash": "78ccf0f6c0e05b4391633f9c5ba61a8ba4bcc0383b765e380b23f5c0573d6dd9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## Fluent-bit的Clickhouse插件"
      }
    },
    {
      "segment_id": "3ccedd50",
      "source_content": "<!-- ![Funny Gif](https://media0.giphy.com/media/bAplZhiLAsNnG/giphy.webp?cid=dda24d507bdfdacf288d461758839009285c1ed114150484&rid=giphy.webp&ct=g) -->",
      "source_content_hash": "9e13169c819b00fa8479d625138d9c48a588c718f8673db1867e1da77315a807",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_3ccedd50"
      }
    },
    {
      "segment_id": "40158b4b",
      "source_content": "I developed a fluent-bit output [plugin](https://github.com/boxyhq/fluent-bit-clickhouse) for Clickhouse.",
      "source_content_hash": "8cf18a7bfcb92bc4693cd3106fabaefc7199c3f711df499c165020ad8e37fd30",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "我开发了一个支持Clickhouse的fluent-bit输出[插件](https://github.com/boxyhq/fluent-bit-clickhouse)。"
      }
    },
    {
      "segment_id": "c431704b",
      "source_content": "## Fluent-Bit config",
      "source_content_hash": "9b32f778c5721f25edb0a08bad076f8aba55c3c4315d39c6ce7ee9978950968c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## Fluent-Bit配置"
      }
    },
    {
      "segment_id": "79ad944d",
      "source_content": "![Fluent-bit Configuration](/img/blog/fluentbit-config.png)",
      "source_content_hash": "6e57964faffcb74ebbb93a389141a0bf19f4ad025627828b4c98e0f00dc1f6fd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "![Fluent-bit配置](/img/blog/fluentbit-config.png)"
      }
    },
    {
      "segment_id": "531437ca",
      "source_content": "This config makes fluent-bit ingest data via HTTP server listening on port 8888 and sends the data to Clickhouse with configuration stated.",
      "source_content_hash": "3f64d152e6835019aa7735cd840711302722e7119a30d3976c6f6e5f7ac55f6c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "该配置使fluent-bit通过8888端口的HTTP服务接收数据，并按设定将数据发送至Clickhouse。"
      }
    },
    {
      "segment_id": "bd92edfc",
      "source_content": "## Clickhouse config",
      "source_content_hash": "973913b974c424888df2b884bb19763c3d551f3526eea17baf40e79264687a73",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## Clickhouse配置"
      }
    },
    {
      "segment_id": "c41a4905",
      "source_content": "<!-- ![Funny Gif](https://media0.giphy.com/media/aS8ypUweGOXMA/200w.webp?cid=dda24d5064d326145a245fce898f7775bc4b7e4ce5f8f178&rid=200w.webp&ct=g) -->",
      "source_content_hash": "2688bbcb90a2fbcab0eb0cb63da6bb20f969d0b6b5825b0a373e34d7d6051f65",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_c41a4905"
      }
    },
    {
      "segment_id": "147e8550",
      "source_content": "I ramped up the number of concurrent requests/queries by modifying the config.xml. After multiple tests, I finalized the following config.",
      "source_content_hash": "4a6f0d60026e6fca84360689dc34e20b6dfa546afe7b7075fb8a8bef8156549b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "通过修改config.xml提升并发请求/查询数，经多次测试后确定最终配置如下。"
      }
    },
    {
      "segment_id": "883231d4",
      "source_content": "![Clickhouse Configuration](/img/blog/clickhouse-config.png)",
      "source_content_hash": "0987cc6e1d1d87d021aec0eb3dcf10a329e09a8e8d86b155c6f486777751ac46",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "![Clickhouse配置](/img/blog/clickhouse-config.png)"
      }
    },
    {
      "segment_id": "b051b70c",
      "source_content": "## Load testing tool",
      "source_content_hash": "d00417c8c1b9c78895833e439e3fcaba352781b680ef98ec6250518100fef79e",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 负载测试工具"
      }
    },
    {
      "segment_id": "3a0184bb",
      "source_content": "<!-- ![Funny Gif](https://media1.giphy.com/media/B6SyssSlTgPXq/200w.webp?cid=dda24d50edfaf581e3165a3d10a7dd26c246ebb459fcebb5&rid=200w.webp&ct=g) -->",
      "source_content_hash": "606b6d3141819808e4084edf14f70256836fa086d674dd83739496cdcbc60d3c",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_3a0184bb"
      }
    },
    {
      "segment_id": "7736989b",
      "source_content": "I developed a load testing tool with Node.js that can be used to benchmark REST API-based endpoints of Fluent-bit.",
      "source_content_hash": "6aac8fbd55d01202bd05c0caf976086d54160ddab9db2862b35204de22571dc4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "我使用Node.js开发了可对Fluent-bit的REST API端点进行基准测试的负载测试工具。"
      }
    },
    {
      "segment_id": "6270d577",
      "source_content": "[API Benchmarking](https://github.com/boxyhq/api-benchmarking)",
      "source_content_hash": "9bfdb21d4f16511e0f687ee066a039638495b09627665344fe21a4e844124abb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "[API基准测试工具](https://github.com/boxyhq/api-benchmarking)"
      }
    },
    {
      "segment_id": "a1fa5396",
      "source_content": "Another tool to load test is the querying part of Clickhouse.",
      "source_content_hash": "b4b4603d54b0b036a2b5940e8daaabf397325bf189dd498a5feda6d1c51019d9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "另开发了针对Clickhouse查询功能的负载测试工具。"
      }
    },
    {
      "segment_id": "ec619944",
      "source_content": "[Clickhouse Load Testing](https://github.com/boxyhq/clickhouse-db-load-testing)",
      "source_content_hash": "3ac0d674de810bf8f288b06f1a4e697c651f50e78e916f279fb8d8f4f7918a44",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "[Clickhouse负载测试工具](https://github.com/boxyhq/clickhouse-db-load-testing)"
      }
    },
    {
      "segment_id": "2e771fd0",
      "source_content": "## The results",
      "source_content_hash": "cf1d7efc6d51c9c8a0bf4842ed162e31a902c55050e8566fb9a747caec031c92",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 测试结果"
      }
    },
    {
      "segment_id": "0750bfa1",
      "source_content": "These results are dependent on the ram allocated to the Docker engine, in my case, it's(4 GiBs).",
      "source_content_hash": "49a6c977cc990d0d5d8bef36370d6e6f79070f7787d98964c2a98325c30be75b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "以下结果受Docker引擎内存分配影响（本测试环境分配4GiB内存）。"
      }
    },
    {
      "segment_id": "bd30d33e",
      "source_content": "### Ingester",
      "source_content_hash": "960a23f223fdc8e4b8a9427891301116a51e6449907ad26b29806b2d8137be0e",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 日志采集器"
      }
    },
    {
      "segment_id": "6b77b644",
      "source_content": "![Ingester results](/img/blog/results-ingester.png)",
      "source_content_hash": "8c9848fcdb1f0ca1ffe885fedfcb08cfba4b7bd7ef3e77eb36560cc6216cbe4f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "![采集器测试结果](/img/blog/results-ingester.png)"
      }
    },
    {
      "segment_id": "5baf88e2",
      "source_content": "### Query",
      "source_content_hash": "14a955fb8b584eccb4e1babe5718be989b38e0c77ba6f327a2da6a6c35a57db5",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 查询器"
      }
    },
    {
      "segment_id": "eb51d107",
      "source_content": "![Queryer result](/img/blog/results-query.png)",
      "source_content_hash": "333443096eddc6449ec5ab153ce303b3a36f169439caef84a4d19df9fa0842fb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "![查询器测试结果](/img/blog/results-query.png)"
      }
    },
    {
      "segment_id": "c19de48a",
      "source_content": "## Conclusion",
      "source_content_hash": "be031d37bb75d96ef08ca9ec5b0e83bb6f91172f60d3c31a78feae8d7dc4a0b0",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 结论"
      }
    },
    {
      "segment_id": "a138e327",
      "source_content": "### Ingester",
      "source_content_hash": "960a23f223fdc8e4b8a9427891301116a51e6449907ad26b29806b2d8137be0e",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 日志收集器"
      }
    },
    {
      "segment_id": "936011bd",
      "source_content": "1. Fluent-bit can handle loads up to 2000 req/sec but in the case of bigger batches, the speed goes down drastically. (200 X 10) & (300 X 10)\n\n2. In the case of long-term light batches, Fluent-bit performs consistently. (10 X 1000)\n\n3. Fluent-bit performs at average speeds in the case of average loads (50 X 50).",
      "source_content_hash": "d06a4449eaed80568b7274f3e42be4db647de308acf50e6bf7104ccd46cb4532",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "1. Fluent-bit 最高可处理 2000 次请求/秒的负载，但在处理大批量数据时性能会急剧下降（如 200 X 10 和 300 X 10 的批次）。\n\n2. 对于长期小批量数据，Fluent-bit 表现稳定（如 10 X 1000 的批次）。\n\n3. 在中等负载情况下（50 X 50），Fluent-bit 表现处于平均水平。"
      }
    },
    {
      "segment_id": "56bc971f",
      "source_content": "### Query",
      "source_content_hash": "14a955fb8b584eccb4e1babe5718be989b38e0c77ba6f327a2da6a6c35a57db5",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 查询"
      }
    },
    {
      "segment_id": "5cb70a3d",
      "source_content": "1. Clickhouse shows the best req/sec performance with an average load (50 X 50).\n\n2. Also, Clickhouse's performance was pretty satisfactory for all the different variations of records in DB. (1.1 mils, 50k, 25k, 10k, 2k & 1k).\n\n3. Clickhouse was able to manage short-term high loads and long-term light loads efficiently. (100 X 10) and (10 X 5000).",
      "source_content_hash": "2f20a0aca32548d425d3825d346bdd38a65981ea1281c446f136fd4dcdd38774",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "1. Clickhouse 在中等负载（50 X 50）下展现出最佳的请求/秒性能。\n\n2. 对于数据库中不同规模的记录量（110万、5万、2.5万、1万、2千和1千），Clickhouse 的表现均令人满意。\n\n3. Clickhouse 能高效处理短期高负载和长期轻负载场景（如 100 X 10 和 10 X 5000）。"
      }
    },
    {
      "segment_id": "44aaa880",
      "source_content": "We will be posting more blogs regarding benchmarks, tools, etc., as we go on to build Hermes and many other dev tools. Please leave comments below.",
      "source_content_hash": "d76f736ad478ca07d22936665ef11c737ea67fab049a7378da9a9f9c28f8e668",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "随着我们持续开发 Hermes 及其他开发者工具，我们将发布更多关于性能测试、工具等方面的博客文章。欢迎在下方留言讨论。"
      }
    },
    {
      "segment_id": "396efb28",
      "source_content": "Thank you!",
      "source_content_hash": "3afdda2c098fc8346a9f2e0ba06ec9c6188411cf78cc7934cfd8b666ce632f55",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "感谢阅读！"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog/2022-03-14-benchmarking-fluentbit-with-clickhouse.md",
  "last_updated_timestamp": "2025-06-10T09:18:27.295526+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-CN": "a520db5482c348eddaa5f16084d48b1bae2096ea566df8053d579d038ddb7ebb"
  }
}