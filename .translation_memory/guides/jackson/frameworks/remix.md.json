{
  "source_file_path_relative_to_docusaurus_root": "guides/jackson/frameworks/remix.md",
  "source_file_content_hash": "553448a86d0182e3ef01ca0aa66726af7bb4910e0e5d2b9a94e703218e39f4c7",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\ntitle: Add SAML SSO to Remix App with BoxyHQ\ndescription: Add SAML SSO to Remix App with BoxyHQ\nsidebar_label: Remix\n---",
      "source_content_hash": "df2cbbda065808a070896320e855041ffe885e8addf1c2f914f0a2254cbfcd27",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "10c4cb47",
      "source_content": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';",
      "source_content_hash": "86702643a5c3bdf74257ff6062535897129ed9144c4f5b70edfe338fef3e5c73",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_10c4cb47"
      }
    },
    {
      "segment_id": "1cc03ec8",
      "source_content": "# Add SAML SSO to Remix App",
      "source_content_hash": "c1187f1c5264c987ef5abefcfb2806ed784b0576718ed9976b53dfa3239f11e5",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "# 为Remix应用集成SAML单点登录"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "Let's look at how to authenticate users in a remix app using Enterprise Single-Sign-On (SSO).",
      "source_content_hash": "5cf3c1fdeac894e4193ee7793c22752460530e07e614fbeae47686f8dbf1f1b6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "本文将介绍如何使用企业级单点登录(SSO)在Remix应用中实现用户认证。"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "If you wish to dive straight into the source, Checkout: https://github.com/boxyhq/jackson-remix-auth",
      "source_content_hash": "f9493db431c7050f792a234196042fd39abaebd7dd246febd11b0d2aba2947b4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "如需直接查看源码，请访问：https://github.com/boxyhq/jackson-remix-auth"
      }
    },
    {
      "segment_id": "976d532b",
      "source_content": ":::info\nThis guide shows how to embed Single Sign-On (SSO) feature using Jackson, and thereby does not require you to host Jackson separately.\n:::",
      "source_content_hash": "a9195f8635e0be9bc6102c715c51b7e60978d99d73eb2598ac3954913f76d48a",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::info\n本指南演示如何通过嵌入Jackson实现单点登录(SSO)功能，因此无需单独部署Jackson服务。\n:::"
      }
    },
    {
      "segment_id": "bc633244",
      "source_content": "## Getting Started",
      "source_content_hash": "c6144136c5fdde00c066bed01a81aecaf8f239036f9ecabc432e5386d5b7a49a",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 开始准备"
      }
    },
    {
      "segment_id": "63622bf0",
      "source_content": "### Create remix app",
      "source_content_hash": "8c146d9bd799d400bdb06ec62e46e13dd5b36efd960864cb30a9489bbb77fb14",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 创建Remix应用"
      }
    },
    {
      "segment_id": "f2b711c6",
      "source_content": "```bash\nnpx create-remix@latest\n```",
      "source_content_hash": "981ce3bded98bf0f10122bb3f48e5143d366e3902366584f323033137f67b88a",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_f2b711c6"
      }
    },
    {
      "segment_id": "d9172fa4",
      "source_content": "You can go with the Remix App Server as the deployment target. Feel free to choose either 'Typescript' or \"Javascript\". All the code samples in this guide are in typescript.",
      "source_content_hash": "b23b4741cf0610d06cba37a109ffc3d1d7ae985fc58137c5f85d57ac44aa2f1a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "可选择Remix应用服务器作为部署目标。根据偏好选择TypeScript或JavaScript，本指南所有代码示例均采用TypeScript。"
      }
    },
    {
      "segment_id": "d06306f7",
      "source_content": "### Install the dependencies",
      "source_content_hash": "475994156cc1d7f11ba44b3e55622badf7e5b81173dc19612b8faedb79b71b3b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 安装依赖项"
      }
    },
    {
      "segment_id": "b017063d",
      "source_content": "```bash\nnpm i remix-auth @boxyhq/remix-auth-sso\n```",
      "source_content_hash": "379640258f9683c31b95911c623456305b6dc5cbbc075659177f069692ebde70",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_b017063d"
      }
    },
    {
      "segment_id": "517051a7",
      "source_content": "[`remix-auth`](https://github.com/sergiodxa/remix-auth) is a complete open-source authentication solution for Remix applications. [`@boxyhq/remix-auth-sso`](https://github.com/boxyhq/remix-auth-sso) provides a remix-auth strategy to interact with the SSO Service provider.",
      "source_content_hash": "eca1de6e3636521d80d29f78d5f10eba43197ee529e487c5c353b088d11c7a4e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "[`remix-auth`](https://github.com/sergiodxa/remix-auth)是Remix应用的全功能开源认证方案。[`@boxyhq/remix-auth-sso`](https://github.com/boxyhq/remix-auth-sso)提供了与SSO服务提供商交互的remix-auth策略。"
      }
    },
    {
      "segment_id": "80d9e13c",
      "source_content": "## Set up remix-auth",
      "source_content_hash": "7ede3a0cfdcde9d1adb6154879cfa22ef19c7f74e62b7903994b723b17a1b3e3",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 配置remix-auth"
      }
    },
    {
      "segment_id": "33331f27",
      "source_content": "First, we need an `Authenticator` instance from `remix-auth`. `Authenticator` exposes the API for login and logout.",
      "source_content_hash": "d78a31d0fbeebe64315170557a0d2cc4e202a9279ac50586740463557be22327",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "首先需要从`remix-auth`获取`Authenticator`实例，该实例提供登录/注销的API接口。"
      }
    },
    {
      "segment_id": "8d04259b",
      "source_content": "### Create sessionStorage for `Authenticator`",
      "source_content_hash": "bca7b602406c2cc545c3798e7bc35df1c5e6333ee274bfad1006aab71d4188c0",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 为`Authenticator`创建会话存储"
      }
    },
    {
      "segment_id": "95e9ba12",
      "source_content": "app/sessions.server.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/sessions.server.ts",
      "source_content_hash": "ab61a67aed23d215cd87e73d4de5808218de54ca1ae4b959cd8902f26b0c3e0a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "app/sessions.server.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/sessions.server.ts"
      }
    },
    {
      "segment_id": "9d8ff988",
      "source_content": "> **NOTE: We will be relying on cookie-based sessions See: [createCookieSessionStorage](https://remix.run/docs/en/v1/api/remix#createcookiesessionstorage) from remix. **",
      "source_content_hash": "0d46d945edccfc4bb33398e52760449e7e24df07daf9e7e68eef26f334812bb2",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-CN": "> **注意：我们将采用基于Cookie的会话机制，参见remix的[createCookieSessionStorage](https://remix.run/docs/en/v1/api/remix#createcookiesessionstorage)方法。**"
      }
    },
    {
      "segment_id": "48ec8149",
      "source_content": "```typescript\nimport { createCookieSessionStorage } from 'remix';\n\nconst sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: '__session',\n    httpOnly: true,\n    path: '/',\n    sameSite: 'lax',\n    secrets: process.env.COOKIE_SECRETS!.split(','),\n    secure: process.env.NODE_ENV === 'production',\n  },\n});\n\nconst { getSession, commitSession, destroySession } = sessionStorage;\nconst JACKSON_ERROR_COOKIE_KEY = 'jackson_error';\n\nexport default sessionStorage;\nexport { getSession, commitSession, destroySession, JACKSON_ERROR_COOKIE_KEY };\n```",
      "source_content_hash": "9e84ffb1ce70eee3c3503c3632d347978e5e22e3d67e9b36bba44ce53c668686",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_48ec8149"
      }
    },
    {
      "segment_id": "3ef18741",
      "source_content": "### Create the `Authenticator` instance",
      "source_content_hash": "ac2bf551cbb8da81228e27e30723bc341ec1996829b869bf6daf4c9d76b9af1d",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 创建`Authenticator`实例"
      }
    },
    {
      "segment_id": "e7772088",
      "source_content": "app/auth.server.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/auth.server.ts",
      "source_content_hash": "dc24163363a904500a1beb02f71f3298877f06d3be1aa87dfc6077ecd2885f61",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "app/auth.server.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/auth.server.ts"
      }
    },
    {
      "segment_id": "3b2a0fd3",
      "source_content": "> **NOTE: We haven't initialised the strategy use yet. That will be done in following sections**",
      "source_content_hash": "681ab71aa945a06b6191f1d63d5f55f66f65de460ab3f82c6e6d9567a31c9172",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-CN": "> **注意：策略初始化将在后续章节完成**"
      }
    },
    {
      "segment_id": "9f3b4022",
      "source_content": "```typescript\nimport { Authenticator } from 'remix-auth';\nimport {\n  BoxyHQSSOStrategy,\n  type BoxyHQSSOProfile,\n} from '@boxyhq/remix-auth-sso';\nimport invariant from 'tiny-invariant';\nimport sessionStorage from './sessions.server';\n\nlet auth: Authenticator;\ndeclare global {\n  var __auth: Authenticator | undefined;\n}\n\nfunction createAuthenticator() {\n  const auth = new Authenticator<BoxyHQSSOProfile>(sessionStorage);\n\n  // Strategy use for the hosted saml service provider goes here\n\n  // Strategy use for the embedded saml service provider goes here\n\n  return auth;\n}\n\nif (process.env.NODE_ENV === 'production') {\n  auth = createAuthenticator();\n} else {\n  //  In development we don't want to recreate the Authenticator for every change\n  if (!global.__auth) {\n    global.__auth = createAuthenticator();\n  }\n  auth = global.__auth;\n}\n\nexport { auth };\n```",
      "source_content_hash": "28195a4b24e9675ea4adb46621dd17736755af964081a209a4a96b1219b52dab",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_9f3b4022"
      }
    },
    {
      "segment_id": "722e4930",
      "source_content": "## Set up Jackson SSO feature",
      "source_content_hash": "0e0c93b2da57dbebc76798baf9ea117649ac2ca009a8096199beedac6fe3493a",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 配置Jackson SSO功能"
      }
    },
    {
      "segment_id": "3c19e221",
      "source_content": "We'll be using SAML Jackson npm to setup some API routes ([resource routes](https://remix.run/docs/en/main/guides/resource-routes) in remix terminology).",
      "source_content_hash": "00756739a005f713654db9813e7ea2e1a00f2efc771e64196be2e112e18da0f6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "我们将使用SAML Jackson npm包来建立API路由（在Remix中称为[资源路由](https://remix.run/docs/en/main/guides/resource-routes)）。"
      }
    },
    {
      "segment_id": "7974af84",
      "source_content": "### Install jackson",
      "source_content_hash": "f109a02ec2ad12791ab069a20755a19a8f8c56521b106dbf818b915446b7a4f4",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 安装jackson"
      }
    },
    {
      "segment_id": "44aaa880",
      "source_content": "Install `@boxyhq/saml-jackson` first:",
      "source_content_hash": "0d022156678069bf61a948b48caef83322533665ebc6c45d8f19c6ecd52b99e0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "首先安装`@boxyhq/saml-jackson`："
      }
    },
    {
      "segment_id": "353ca453",
      "source_content": "```bash\nnpm i @boxyhq/saml-jackson\n```",
      "source_content_hash": "084f5b513b97da0a80f69d22929ce720ccd5193702d397800c989eb42d0dd025",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_353ca453"
      }
    },
    {
      "segment_id": "f38d1cb0",
      "source_content": "Before you proceed,set up a [database](../../../docs/jackson/deploy/service#database) for jackson. Refer to [db environment variables](../../../docs/jackson/deploy/env-variables#database-configuration) for the npm library options.",
      "source_content_hash": "f1d4c288a33e3e24c546f341d53f4d2e8bc1c54554047543066aed4df248b045",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "继续操作前，请为jackson配置[数据库](../../../docs/jackson/deploy/service#database)，参考[npm库的数据库环境变量配置](../../../docs/jackson/deploy/env-variables#database-configuration)。"
      }
    },
    {
      "segment_id": "47516512",
      "source_content": "### Setup `JacksonProvider`",
      "source_content_hash": "25760ee1bb4ce83054be683294f372dce81a771a0d7489847e58698e62ec656a",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 配置`JacksonProvider`"
      }
    },
    {
      "segment_id": "6fc234cf",
      "source_content": "app/auth.jackson.server.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/auth.jackson.server.ts",
      "source_content_hash": "4fbaf89ce62c4b39ca52fbae71dcb625aad96a60615da6b2cb1d43e06664547c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "app/auth.jackson.server.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/auth.jackson.server.ts"
      }
    },
    {
      "segment_id": "d459b1e0",
      "source_content": "> **NOTE: [clientSecretVerifier](../../../docs/jackson/deploy/env-variables#client_secret_verifier) set below will be matched against client_secret coming from Authenticator &nbsp;**",
      "source_content_hash": "f7f501109e7196dfd4ddbbe94c83b0fefba3068f801daa3c5d685d8b49e43ba0",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-CN": "> **注意：下方设置的[clientSecretVerifier](../../../docs/jackson/deploy/env-variables#client_secret_verifier)将与Authenticator传入的client_secret进行匹配 &nbsp;**"
      }
    },
    {
      "segment_id": "b474abd5",
      "source_content": "```typescript\n const opts =  {\n  ...\n   db: {\n    engine: \"sql\",\n    url: \"postgresql://postgres:postgres@localhost:5432/postgres\",\n    type: \"postgres\",\n  },\n  clientSecretVerifier: process.env.CLIENT_SECRET_VERIFIER,\n  ...\n }\n\n ...\n\n async function JacksonProvider({\n   appBaseUrl,\n }: {\n   appBaseUrl: string;\n }): Promise<{\n   connectionAPIController: IConnectionAPIController;\n   oauthController: IOAuthController;\n }> {\n   const _opts = { ...opts, externalUrl: appBaseUrl, samlAudience: appBaseUrl };\n   // this is needed because in development we don't want to restart\n   // the server with every change, but we want to make sure we don't\n   // create a new connection to the DB with every change either.\n   if (process.env.NODE_ENV === \"production\") {\n     const controllers = await jackson(_opts);\n     connectionAPIController = controllers.connectionAPIController;\n     oauthController = controllers.oauthController;\n   } else {\n     if (!global.__connectionAPIController && !global.__oauthController) {\n       const controllers = await jackson(_opts);\n       global.__connectionAPIController = controllers.connectionAPIController;\n       global.__oauthController = controllers.oauthController;\n     }\n     connectionAPIController = global.__connectionAPIController;\n     oauthController = global.__oauthController;\n   }\n\n   return { connectionAPIController, oauthController };\n }\n\n ...\n\n```",
      "source_content_hash": "428584e7e2c65d4d106b5d60a2612cd046b7c3f19febc0b296d0fd053e96aaae",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_b474abd5"
      }
    },
    {
      "segment_id": "a75f8411",
      "source_content": "### Resource routes to handle OAuth 2.0 and SSO Connections",
      "source_content_hash": "54f78e4d8dd013ca39b9774d2b078fa9a69bd9257a61dcdbf813f648721ece67",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 处理OAuth 2.0和SSO连接的资源路由"
      }
    },
    {
      "segment_id": "39c48ff7",
      "source_content": "Next, create the api files for [OAuth 2.0 flow](../../../docs/jackson/sso-flow/#3-oauth-20-flow) and [SSO Connection](../../../docs/jackson/sso-flow/#2-sso-connection-api):",
      "source_content_hash": "796687c334a94ad9905b8acc4b33a6731d2b163d209ea6f1e78bea765d9dc8bc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "接下来为[OAuth 2.0流程](../../../docs/jackson/sso-flow/#3-oauth-20-flow)和[SSO连接API](../../../docs/jackson/sso-flow/#2-sso-connection-api)创建接口文件："
      }
    },
    {
      "segment_id": "b26685f5",
      "source_content": "```bash\napp/routes $ mkdir api && cd api\nroutes/api $ touch oauth.\\$slug.ts v1.connections.ts\n```",
      "source_content_hash": "dd940e5e40c62237c939e161bae057e19638d216577649fd89faa37ac2ea3f81",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_b26685f5"
      }
    },
    {
      "segment_id": "5cf1bce4",
      "source_content": "oauth.$slug.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/api/oauth.%24slug.ts",
      "source_content_hash": "b30a61fc170e314ab2dc0ba46e02c14a3c0cfb008c3c81bbbf6dcda3127902ee",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "oauth.$slug.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/api/oauth.%24slug.ts"
      }
    },
    {
      "segment_id": "d7c0a6db",
      "source_content": "```typescript\n...\n\n// Handles GET /api/oauth/authorize, GET /api/oauth/userinfo\nexport const loader: LoaderFunction = async ({ params, request }) => {\n\n  ... // Some validation logic\n  const operation = params.slug;\n  const url = new URL(request.url);\n\n  const { oauthController } = await JacksonProvider({\n    appBaseUrl: url.origin,\n  });\n\n  // rightmost query param will win in case of multiple ones with same name\n  const queryParams = Object.fromEntries(url.searchParams.entries());\n\n  switch (operation) {\n    case \"authorize\": {\n      ...\n      try {\n        const { redirect_url, authorize_form } =\n          await oauthController.authorize(\n            queryParams as unknown as OAuthReqBody\n          );\n        ...\n      } catch (err: any) {\n        ... // error handling, redirect to /error page\n      }\n    }\n    case \"oidc\": {\n      try {\n        const { redirect_url } = await oauthController.oidcAuthzResponse(\n          queryParams as unknown as OIDCAuthzResponsePayload\n        );\n        if (redirect_url) {\n          return redirect(redirect_url, 302);\n        }\n      } catch (err: any) {\n        ... // error handling, redirect to /error page\n      }\n    }\n    case \"userinfo\": {\n     ... // token validation\n      try {\n        const profile = await oauthController.userInfo(token);\n        return json(profile);\n      } catch (error: any) {\n        ... // error handling\n      }\n    }\n  }\n};\n\n// Handles POST /api/oauth/saml, POST /api/oauth/token\nexport const action: ActionFunction = async ({ params, request }) => {\n\n  ... // Some validation logic\n  const operation = params.slug;\n  const url = new URL(request.url);\n\n  const { oauthController } = await JacksonProvider({\n    appBaseUrl: url.origin,\n  });\n  switch (operation) {\n    case \"saml\": {\n      try {\n        const { redirect_url } = await oauthController.samlResponse(body);\n        return redirect(redirect_url, 302);\n      } catch (err: any) {\n        ... // error handling\n      }\n    }\n    case \"token\": {\n      try {\n        const tokenRes = await oauthController.token(body);\n        return json(tokenRes);\n      } catch (error: any) {\n        ... // error handling\n      }\n    }\n  }\n};\n```",
      "source_content_hash": "c5469ff9869dc2a5826bd4ca52250d270e488fb61ffe70a179a8c48051cf04d3",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_d7c0a6db"
      }
    },
    {
      "segment_id": "2d5a3f2f",
      "source_content": "v1.connections.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/api/v1.connections.ts",
      "source_content_hash": "ce0e67360eab414487ea38695d4092a1b010133444eaf08d4e7ab9419a46eead",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "v1.connections.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/api/v1.connections.ts"
      }
    },
    {
      "segment_id": "f5128628",
      "source_content": "```typescript\n  export const loader: LoaderFunction = async ({ request }) => {\n   const url = new URL(request.url);\n   const queryParams = Object.fromEntries(\n     url.searchParams.entries()\n   ) as unknown as { clientID?: string; tenant?: string; product?: string };\n   ...// Validate apiKey\n   const { connectionAPIController } = await JacksonProvider({ appBaseUrl: url.origin });\n\n   try {\n     return json(await connectionAPIController.getConnections(queryParams));\n   } catch (error: any) {\n     ... // error handling\n   }\n };\n\n export const action: ActionFunction = async ({ request }) => {\n   const url = new URL(request.url);\n   const contentType = request.headers.get(\"Content-Type\");\n   ... // Validate body,apiKey\n   const { connectionAPIController } = await JacksonProvider({ appBaseUrl: url.origin });\n\n   try {\n     switch (request.method) {\n       case \"POST\":\n         return json(await connectionAPIController.createSAMLConnection(body));\n       case \"PATCH\":\n         await connectionAPIController.updateSAMLConnection(body);\n         return new Response(null, { status: 204 });\n       case \"DELETE\":\n         await connectionAPIController.deleteConnections(body);\n         return new Response(null, { status: 204 });\n     }\n   } catch (error: any) {\n     ... // error handling\n   }\n };\n```",
      "source_content_hash": "0d0d81a34e8cd3e406e6621e542ea490cb9af24f08d3e310cab6e8138b95ce7d",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_f5128628"
      }
    },
    {
      "segment_id": "e0e9d747",
      "source_content": "### Initialise BoxyHQSSOStrategy",
      "source_content_hash": "14def4b3ff3553d667260a851dbb15d07187edf59013a44d5ffe2ca68a4f8077",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 初始化 BoxyHQSSOStrategy"
      }
    },
    {
      "segment_id": "2e76bd58",
      "source_content": "Use the strategy with the `Authenticator` as shown below. The `clientID/Secret` values are expected to be set dynamically from the client side. For now set them to the value `dummy`.",
      "source_content_hash": "1dac8cb19f56c646c6553ed33052929a83fd35e7a343b34619f15a191725f6ce",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "如下所示将策略与 `Authenticator` 结合使用。`clientID/Secret` 值预期由客户端动态设置，目前可暂设为 `dummy`。"
      }
    },
    {
      "segment_id": "c9f6a516",
      "source_content": "Point the `issuer` to the app url.",
      "source_content_hash": "654bbfbf67f97d696e8eee0a9d83f4fca17711a8e593d90eae60f5937dbc4319",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "将 `issuer` 指向应用URL。"
      }
    },
    {
      "segment_id": "b8954ec9",
      "source_content": "auth.server.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/auth.server.ts",
      "source_content_hash": "52b826ef93dc2484fd60903754125e9714912175ad1b64e94b4490047cd4fd8b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "auth.server.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/auth.server.ts"
      }
    },
    {
      "segment_id": "c4967bbc",
      "source_content": "> **BOXYHQSSO_ISSUER in env is set to point to the app url: http://localhost:3366 or the actual url once hosted. Take a look at [.env.example](https://github.com/boxyhq/jackson-remix-auth/blob/main/.env.example) file &nbsp;**",
      "source_content_hash": "6eaebc7237f5177075ffbf3f9a24f3067e56689c972a8aec218532959d757d34",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-CN": "> **环境变量 BOXYHQSSO_ISSUER 需设置为应用URL：http://localhost:3366 或实际托管地址。参考 [.env.example](https://github.com/boxyhq/jackson-remix-auth/blob/main/.env.example) 文件 &nbsp;**"
      }
    },
    {
      "segment_id": "c578d2d4",
      "source_content": "```typescript\ninvariant(process.env.BASE_URL, 'Expected BASE_URL to be set in env');\ninvariant(\n  process.env.BOXYHQSSO_ISSUER,\n  'Expected BOXYHQSSO_ISSUER to be set in env'\n);\n\nconst BASE_URL = process.env.BASE_URL;\nconst BOXYHQSSO_ISSUER = process.env.BOXYHQSSO_ISSUER;\n// Strategy use for the embedded sso service provider goes here\nauth.use(\n  new BoxyHQSSOStrategy(\n    {\n      issuer: BOXYHQSSO_ISSUER, //same as the APP URL\n      clientID: 'dummy',\n      clientSecret: process.env.CLIENT_SECRET_VERIFIER || 'dummy',\n      callbackURL: new URL('/auth/sso/embed/callback', BASE_URL).toString(),\n    },\n    async ({ profile }) => {\n      return profile;\n    }\n  ),\n  'boxyhq-sso-embed'\n);\n```",
      "source_content_hash": "02aefbb769c1295bccdcff6ea77c6fd78927aeb3837c1e62292529140c124d2b",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_c578d2d4"
      }
    },
    {
      "segment_id": "cb0acec9",
      "source_content": "### Routes to handle login and callback from IdP",
      "source_content_hash": "acc426ed99a4e896af23b75448583791521c338f176e2af512631ba3d4f46e65",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 处理登录和身份提供商回调的路由"
      }
    },
    {
      "segment_id": "eb398072",
      "source_content": "We need 2 routes:",
      "source_content_hash": "7ed3f4af95a0f319a486f2d56a57123df3329eac8a594857faa4913642c3efa8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "需要创建两个路由："
      }
    },
    {
      "segment_id": "5b98f6e2",
      "source_content": "~> [/auth/sso/embed](https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/auth.sso.embed.tsx) - Action handler for login  \n~> [/auth/sso/embed/callback](https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/auth.sso.embed.callback.tsx) - After successful authorization, user is redirected here with the authorization code. The `code` is then exchanged to get the `token` and further the user profile.",
      "source_content_hash": "994f612a7aca4e03a7570793ee4395b296fef892f41a46b4ad57b9ed2290d2fb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "~> [/auth/sso/embed](https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/auth.sso.embed.tsx) - 登录操作处理器  \n~> [/auth/sso/embed/callback](https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/auth.sso.embed.callback.tsx) - 授权成功后携带授权码重定向至此。通过 `code` 交换获取 `token` 及用户档案。"
      }
    },
    {
      "segment_id": "0274aeec",
      "source_content": "Create the following files under `app/routes`:",
      "source_content_hash": "542213f91d19ff14dbf435470ea87bd20e2a63c834481e443b42c4b3d8fc04cf",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "在 `app/routes` 目录下创建以下文件："
      }
    },
    {
      "segment_id": "f7f08e35",
      "source_content": "app/routes/auth.sso.embed.tsx: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/auth.sso.embed.tsx",
      "source_content_hash": "eb0fdeac9ba25e668a03990aaf6735e81e9f7080398ea0177f9f853464120d7a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "app/routes/auth.sso.embed.tsx: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/auth.sso.embed.tsx"
      }
    },
    {
      "segment_id": "96757ef3",
      "source_content": "```tsx\n...\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const product = formData.get(\"product\");\n\n  ... // Add some validation logic\n\n  // extracting the tenant from email is one way to set it\n  const tenant = email.split(\"@\")[1];\n\n  return await auth.authenticate(\"boxyhq-sso-embed\", request, {\n    successRedirect: \"/private\",\n    failureRedirect: \"/login\",\n    context: {\n      clientID: `tenant=${tenant}&product=${product}`,\n      clientSecret: process.env.CLIENT_SECRET_VERIFIER || \"dummy\",\n    },\n  });\n};\n```",
      "source_content_hash": "360a56dafbb1d0304d39f34464be6bfb7ace9114edff14593dc537fad70b1dcc",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_96757ef3"
      }
    },
    {
      "segment_id": "fe2c7f95",
      "source_content": "app/routes/auth.sso.embed.callback.tsx: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/auth.sso.embed.callback.tsx",
      "source_content_hash": "0c8200666f51f5cbcb41bfe24a9feacdbc580808e53f68dd35f75aa4c4dbeac6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "app/routes/auth.sso.embed.callback.tsx: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/auth.sso.embed.callback.tsx"
      }
    },
    {
      "segment_id": "be9750ef",
      "source_content": "```tsx\n...\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  return auth.authenticate(\"boxyhq-sso-embed\", request, {\n    successRedirect: \"/private\",\n    failureRedirect: \"/login\",\n  });\n};\n```",
      "source_content_hash": "e612d844b66c20c4ac64c6915699970d23af084754897625b0bb731b57b67018",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_be9750ef"
      }
    },
    {
      "segment_id": "dfa57bae",
      "source_content": "## Add an SSO Connection",
      "source_content_hash": "823df2e085277f9f576d2a7e963ffce64fc3be4ea12d742f61fbf05a560602e9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 添加SSO连接"
      }
    },
    {
      "segment_id": "85f6fcdd",
      "source_content": "[Add a SAML SSO connection](../../../docs/jackson/sso-flow/#21-add-connection) for [mocksaml.com](https://mocksaml.com). You can start the app and call the connection API as shown below:",
      "source_content_hash": "e8e6ec098c5f9ad020515a0b967454dd19f027c363f301c0fcfb877ba1fa22ee",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "为 [mocksaml.com](https://mocksaml.com) [添加SAML SSO连接](../../../docs/jackson/sso-flow/#21-add-connection)。启动应用后可按如下方式调用连接API："
      }
    },
    {
      "segment_id": "06cfe1fb",
      "source_content": "<details>\n<summary>Below adds a SAML SSO connection for https://mocksaml.com</summary>\n<pre>\ncurl --location --request POST 'http://localhost:3366/api/v1/connections'\n--header 'Authorization: Api-Key __JACKSON_API_KEY__'\n--header 'Content-Type: application/x-www-form-urlencoded'\n--data-urlencode 'encodedRawMetadata=PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxFbnRpdHlEZXNjcmlwdG9yIHhtbG5zOm1kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bWV0YWRhdGEiIGVudGl0eUlEPSJodHRwczovL3NhbWwuZXhhbXBsZS5jb20vZW50aXR5aWQiIHZhbGlkVW50aWw9IjIwMjYtMDYtMjJUMTg6Mzk6NTMuMDAwWiI+CiAgPElEUFNTT0Rlc2NyaXB0b3IgV2FudEF1dGhuUmVxdWVzdHNTaWduZWQ9ImZhbHNlIiBwcm90b2NvbFN1cHBvcnRFbnVtZXJhdGlvbj0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj4KICAgIDxLZXlEZXNjcmlwdG9yIHVzZT0ic2lnbmluZyI+CiAgICAgIDxLZXlJbmZvIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj4KICAgICAgICA8WDUwOURhdGE+CiAgICAgICAgICA8WDUwOUNlcnRpZmljYXRlPk1JSUM0akNDQWNvQ0NRQzMzd255YlQ1UVpEQU5CZ2txaGtpRzl3MEJBUXNGQURBeU1Rc3dDUVlEVlFRR0V3SlYKU3pFUE1BMEdBMVVFQ2d3R1FtOTRlVWhSTVJJd0VBWURWUVFEREFsTmIyTnJJRk5CVFV3d0lCY05Nakl3TWpJNApNakUwTmpNNFdoZ1BNekF5TVRBM01ERXlNVFEyTXpoYU1ESXhDekFKQmdOVkJBWVRBbFZMTVE4d0RRWURWUVFLCkRBWkNiM2g1U0ZFeEVqQVFCZ05WQkFNTUNVMXZZMnNnVTBGTlREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMR2ZZZXR0TXNjdDFUNnRWVXdUdWROSkg1UG5iOUdHbmtYaTlady9lNng0NUREMApSdVJPTmJGbEoyVDRSakFFL3VHK0FqWHhYUThvMlNaZmI5K0dnbUNIdVRKRk5nSG9aMW5GVlhDbWIvSGc4SHBkCjR2T0FHWG5kaXhhUmVPaXEzRUg1WHZwTWpNa0ozKzgrOVZZTXpNWk9qa2dRdEFxTzM2ZUFGRmZOS1g3ZFRqM1YKcHdMa3Z6Ni9LRkNxOE9Bd1krQVVpNGVabTVKNTdEMzFHempId2ZqSDlXVGVYME15bmRtbk5CMXFWNzVxUVIzYgoyL1c1c0dIUnYrOUFhcmdnSmtGK3B0VWtYb0x0VkE1MXdjZlltNmhJTHB0cGRlNUZRQzhSV1kxWXJzd0JXQUVaCk5meXJSNEplU3dlRWxOSGc0TlZPczRUd0dqT1B3V0dxelRmZ1RsRUNBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0YKQUFPQ0FRRUFBWVJsWWZsU1hBV29acEZmd05pQ1FWRTVkOXpaMERQek5kV2hBeWJYY1R5TWYwejVtRGY2RldCVwo1R3lvaTl1M0VNRURuekxjSk5rd0pBQWMzOUFwYTRJMi90bWwrSnkyOWRrOGJUeVg2bTkzbmdtQ2dkTGg1WmE0CmtodVUzQU0zTDYzZzdWZXhDdU83a3dramgvK0xxZGNJWHNWR082WERmdTJRT3MxWHBlOXpJekxwd20vUk5ZZVgKVWpiU2o1Y2UvamVrcEF3N3F5VlZMNHhPeWg4QXRVVzFlazN3SXcxTUp2RWdFUHQwZDE2b3NoV0pwb1MxT1Q4TApyLzIyU3ZZRW8zRW1TR2RUVkdnazN4M3MrQTBxV0FxVGN5anI3UTRzL0dLWVJGZm9tR3d6MFRaNEl3MVpOOTlNCm0wZW8yVVNsU1JUVmw3UUhSVHVpdVNUaEhwTEtRUT09CjwvWDUwOUNlcnRpZmljYXRlPgogICAgICAgIDwvWDUwOURhdGE+CiAgICAgIDwvS2V5SW5mbz4KICAgIDwvS2V5RGVzY3JpcHRvcj4KICAgIDxOYW1lSURGb3JtYXQ+dXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6MS4xOm5hbWVpZC1mb3JtYXQ6ZW1haWxBZGRyZXNzPC9OYW1lSURGb3JtYXQ+CiAgICA8U2luZ2xlU2lnbk9uU2VydmljZSBCaW5kaW5nPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YmluZGluZ3M6SFRUUC1SZWRpcmVjdCIgTG9jYXRpb249Imh0dHBzOi8vbW9ja3NhbWwuY29tL2FwaS9zYW1sL3NzbyIvPgogICAgPFNpbmdsZVNpZ25PblNlcnZpY2UgQmluZGluZz0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmJpbmRpbmdzOkhUVFAtUE9TVCIgTG9jYXRpb249Imh0dHBzOi8vbW9ja3NhbWwuY29tL2FwaS9zYW1sL3NzbyIvPgogIDwvSURQU1NPRGVzY3JpcHRvcj4KPC9FbnRpdHlEZXNjcmlwdG9yPg=='\n--data-urlencode 'defaultRedirectUrl=http://localhost:3366'\n--data-urlencode 'redirectUrl=[\"http://localhost:3366/*\"]'\n--data-urlencode 'tenant=boxyhq.com'\n--data-urlencode 'product=saml-demo.boxyhq.com'\n--data-urlencode 'name=demo-config'\n--data-urlencode 'description=Demo SAML config'\n</pre>\n</details>",
      "source_content_hash": "e8bd6f2ac9dc2ee8e757ecd76599ec4d1df362a274cafec1f873705bfe1c31af",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_06cfe1fb"
      }
    },
    {
      "segment_id": "ad3aada7",
      "source_content": "## App routes",
      "source_content_hash": "5af367a82261ad859a107f0e7d5e5c2b2e4de8f73ebf1fd15eafd0ecdcb026c9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 应用路由"
      }
    },
    {
      "segment_id": "a7b21ac5",
      "source_content": "### Login/Logout",
      "source_content_hash": "32b5c4cc2c84d20b873becfe443b538a6345d96704b1bfea1a4cfe0fb878dc2f",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 登录/登出"
      }
    },
    {
      "segment_id": "250c20ca",
      "source_content": "For the `Login` page we need a form that can accept email (for deriving tenant) and product. We also change the form action for the `embedded SAML provider` button.",
      "source_content_hash": "215991a02728d3e8b9d5484bf6fd6a9c06f2f2682aaec7acb891a9a747e9ec80",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "`登录`页面需包含可接收邮箱（用于租户识别）和产品的表单。同时需修改`嵌入式SAML提供商`按钮的表单动作。"
      }
    },
    {
      "segment_id": "a279d6f8",
      "source_content": "**login.tsx: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/login.tsx &nbsp;**",
      "source_content_hash": "85b70e28d1a792844e702e50b374d8a9c78cd371471346da5769b8f023531108",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "**login.tsx: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/login.tsx &nbsp;**"
      }
    },
    {
      "segment_id": "d8b7afcb",
      "source_content": "```tsx\n  export const loader: LoaderFunction = async ({ request }) => {\n    // check if authenticated then redirect to /private\n    await auth.isAuthenticated(request, { successRedirect: \"/private\" });\n    // return form error data from session\n  }\n\n   export default function Login() {\n     return (\n       ...\n       <Form\n        method=\"post\"\n        action=\"/auth/sso\"\n        reloadDocument\n        >\n        ... // input fields for email and product\n        <button type=\"submit\">Continue with SAML SSO (Hosted SAML Provider)</button>\n        <button type=\"submit\" formAction=\"/auth/sso/embed\">Continue with SAML SSO (Embedded SAML Provider)</button>\n       </Form>\n       ...\n     )\n```",
      "source_content_hash": "5daddc75d4703b9a7e96a3420e95bc6fb07f5d38b56198b30889f4bf4ea80784",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_d8b7afcb"
      }
    },
    {
      "segment_id": "40e5a2ef",
      "source_content": "**logout.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/logout.ts &nbsp;**",
      "source_content_hash": "2c584c72bcca75cfad53c924ce7eff28f0d918a6275656a8536dda4d69d9bf71",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "**logout.ts: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/logout.ts &nbsp;**"
      }
    },
    {
      "segment_id": "07bba194",
      "source_content": "```typescript\nexport const loader: LoaderFunction = async ({ request }) => {\n  await auth.logout(request, { redirectTo: '/login' });\n};\n```",
      "source_content_hash": "2b6ab08f094687c3bf06aca1e79a1eb7d6f3d314a9c39ea68a48f1e1f1f65e98",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_07bba194"
      }
    },
    {
      "segment_id": "e60b0fa0",
      "source_content": "### Private",
      "source_content_hash": "6945d737dc02c313d2cdda63c07707dbae585efdb9a13d8b898e5c23435706bc",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 私有页面"
      }
    },
    {
      "segment_id": "46a44d60",
      "source_content": "This page renders the logged-in user profile.",
      "source_content_hash": "34dd04b4f086df6fea71aa540b459e79bc898869de5d516d196aef29b0d2413e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "此页面呈现已登录用户的个人资料。"
      }
    },
    {
      "segment_id": "24d24e6d",
      "source_content": "**private.tsx: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/private.tsx &nbsp;**",
      "source_content_hash": "b48613d5537730e14190def5fb1c048a55b63bf40c1f0a4936622eaf90f0a1a3",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "**private.tsx: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/private.tsx &nbsp;**"
      }
    },
    {
      "segment_id": "bed27c1d",
      "source_content": "```tsx\nexport const loader: LoaderFunction = async ({ request }) => {\n  const profile = await auth.isAuthenticated(request, {\n    failureRedirect: '/login',\n  });\n\n  return json<LoaderData>({ profile });\n};\n\nexport default function Private() {\n  const { profile } = useLoaderData<LoaderData>();\n  return (\n    <>\n      <h1 className=\"text-primary mb-4 font-bold md:text-3xl\">Raw profile</h1>\n      <pre>\n        <code>{JSON.stringify(profile, null, 2)}</code>\n      </pre>\n    </>\n  );\n}\n```",
      "source_content_hash": "b07f8075368ddb498c86bb3aa33eb8a2b2627f0238d32b459fee2c82544e7632",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_bed27c1d"
      }
    },
    {
      "segment_id": "c089b41f",
      "source_content": "### Error page",
      "source_content_hash": "1a2627b32432fcd464f60b8dc01e6622b5a91f4e6d5d5e53f2a171ecc1beb1b9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 错误页面"
      }
    },
    {
      "segment_id": "beec49ed",
      "source_content": "For errors occuring in the SAML flow (/api/oauth/authorize and /api/oauth/saml), the user get's [redirected](https://github.com/boxyhq/jackson-remix-auth/blob/e75cb4a9c340b088749ec63d6932f2f4b206a07d/app/routes/api/oauth.%24slug.ts#L63) to an error page.",
      "source_content_hash": "f739a466b943199162ebaf9c40682175b9eae0d7cd12a94e133e451e3bfa5602",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "当SAML流程（/api/oauth/authorize 和 /api/oauth/saml）中出现错误时，用户将被[重定向](https://github.com/boxyhq/jackson-remix-auth/blob/e75cb4a9c340b088749ec63d6932f2f4b206a07d/app/routes/api/oauth.%24slug.ts#L63)至错误页面。"
      }
    },
    {
      "segment_id": "4ddcc352",
      "source_content": "Create one at `/error`:",
      "source_content_hash": "5a0531bdcbd8bd2d624168fb492c8fea21a15d82c37fdffd3fbb7e20763b1d5a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "在 `/error` 路径下创建："
      }
    },
    {
      "segment_id": "cbbdf094",
      "source_content": "**error.tsx: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/error.tsx &nbsp;**",
      "source_content_hash": "1008ef20e79f705449b0138a16fcd9997e81c9992b3d520f385c218344115fb1",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "**error.tsx: https://github.com/boxyhq/jackson-remix-auth/blob/main/app/routes/error.tsx &nbsp;**"
      }
    },
    {
      "segment_id": "de546337",
      "source_content": "```tsx\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSession(request.headers.get('Cookie'));\n  const { statusCode, message } = session.get(JACKSON_ERROR_COOKIE_KEY) || {\n    statusCode: null,\n    message: '',\n  };\n  return json({ statusCode, message });\n};\n\nexport default function Error() {\n  const { statusCode, message } = useLoaderData<LoaderData>();\n\n  let statusText = '';\n  if (typeof statusCode === 'number') {\n    if (statusCode >= 400 && statusCode <= 499) {\n      statusText = 'client-side error';\n    }\n    if (statusCode >= 500 && statusCode <= 599) {\n      statusText = 'server error';\n    }\n  }\n\n  if (statusCode === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"h-full\">\n      <div className=\"h-[20%] translate-y-[100%] px-[20%] text-[hsl(152,56%,40%)]\">\n        <svg\n          className=\"mb-5 h-10 w-10\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          strokeWidth={2}\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n        <h1 className=\"text-xl font-extrabold md:text-6xl\">{statusCode}</h1>\n        <h2 className=\"uppercase\">{statusText}</h2>\n        <p className=\"mt-6 inline-block\">SAML error: </p>\n        <p className=\"mr-2 text-xl font-bold\">{message}</p>\n      </div>\n    </div>\n  );\n}\n```",
      "source_content_hash": "8c47b165f302fa4e32a511b5da2f6bd2899092c9ef13f49c16fe9dded07acbb7",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_de546337"
      }
    },
    {
      "segment_id": "89d9a6db",
      "source_content": "## Ready to go",
      "source_content_hash": "395c2dd8591b7414ec68db3dc1cbedf3676a94e73bf3272e05b22c74df242b8e",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 准备就绪"
      }
    },
    {
      "segment_id": "b12a2e99",
      "source_content": "That's it, your remix app is ready for Single Sign-On. 🎉",
      "source_content_hash": "7fecc6804f5403c641ac7cb7c6897040ed2ff54966fad3389a4ccd3bb040d99f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "至此，您的Remix应用已具备单点登录功能。🎉"
      }
    },
    {
      "segment_id": "03464bfb",
      "source_content": "## Next steps",
      "source_content_hash": "3a5d9cbc49e6e5f0c98349dd1cd7cfe5713807fc5f02234240621031925d1f32",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 后续步骤"
      }
    },
    {
      "segment_id": "41c9bc3b",
      "source_content": "- Got a question? [Ask here](https://discord.gg/uyb7pYt4Pa)",
      "source_content_hash": "3d42b2d324c1d4391b652a72774e8ed6adad48f83e9f875f7f743e0f70b6c89a",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- 有问题需要咨询？[请在此提问](https://discord.gg/uyb7pYt4Pa)"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs-guides/current/jackson/frameworks/remix.md",
  "last_updated_timestamp": "2025-06-08T18:49:09.290101+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-CN": "553448a86d0182e3ef01ca0aa66726af7bb4910e0e5d2b9a94e703218e39f4c7"
  }
}